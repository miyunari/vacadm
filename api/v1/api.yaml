openapi: 3.0.0
info: 
  title: "VacAdm"
  description: REST-API Spezifikation
  version: 0.0.1
servers:
  - url: http://localhost:8080/v1
    description: ""
security:
  - BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    User_Request:
      properties:
        parent_id:
          type: string
        team_id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
      example:
        parent_id: "f5742f08-55ae-41f9-bca0-3600b466106c"
        team_id: "1ff63524-156f-466d-b287-4258811444dd"
        first_name: "Max"
        last_name: "Mustermann"
        email: "max@mustermann.de"

    User_Response:
      properties:
        parent_id:
          type: string
        team_id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        created_at:
          type: string 
          format: date-time
        updated_at:
          type: string 
          format: date-time
      example:
        parent_id: "f5742f08-55ae-41f9-bca0-3600b466106c"
        team_id: "1ff63524-156f-466d-b287-4258811444dd"
        first_name: "Max"
        last_name: "Mustermann"
        email: "max@mustermann.de"
        created_at: "2022-04-05T08:57:32Z"
        updated_at: "2022-04-05T08:57:32Z"

    Team_Request:
      properties:
        owner_id:
          type: string
        name:
          type: string
      example:
        owner_id: "1ff63524-156f-466d-b287-4258811444dd"
        last_name: "Example-Team"

    Team_Response:
      properties:
        owner_id:
          type: string
        name:
          type: string
        created_at:
          type: string 
          format: date-time
        updated_at:
          type: string 
          format: date-time
      example:
        owner_id: "1ff63524-156f-466d-b287-4258811444dd"
        name: "Example-Team"
        created_at: "2022-04-05T08:57:32Z"
        updated_at: "2022-04-05T08:57:32Z"

    Vacation_Request:
      properties:
        user_id:
          type: string
        approved_by:
          type: string
          example: "1ff63524-156f-466d-b287-4258811444dd"
        from:
          type: string
          format: date
          example: "2022-04-06"
        to:
          type: string
          format: date
          example: "2022-04-07"
      example:
        user_id: "1ff63524-156f-466d-b287-4258811444dd"        
        approved_by: "1ff63524-156f-466d-b287-4258811444dd"
        from: "2022-04-05"
        to: "2022-04-05"

    Vacation_Response:
      properties:
        user_id:
          type: string
        approved_by:
          type: string
          example: "1ff63524-156f-466d-b287-4258811444dd"
        from:
          type: string
          format: date
        to:
          type: string
          format: date
        created_at:
          type: string 
          format: date-time
      example:
        user_id: "1ff63524-156f-466d-b287-4258811444dd"        
        approved_by: "1ff63524-156f-466d-b287-4258811444dd"
        from: "2022-04-06"
        to: "2022-04-07"
        created_at: "2022-04-05T08:57:32Z"

    Vacation-Request_Request:
      properties:
        user_id:
          type: string
        from:
          type: string
          format: date
          example: "2022-04-06"
        to:
          type: string
          format: date
          example: "2022-04-07"
      example:
        user_id: "1ff63524-156f-466d-b287-4258811444dd"        
        from: "2022-04-05"
        to: "2022-04-05"

    Vacation-Request_Response:
      properties:
        user_id:
          type: string
        from:
          type: string
          format: date
        to:
          type: string
          format: date
        created_at:
          type: string 
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        user_id: "1ff63524-156f-466d-b287-4258811444dd"        
        approved_by: "1ff63524-156f-466d-b287-4258811444dd"
        from: "2022-04-06"
        to: "2022-04-07"
        created_at: "2022-04-05T08:57:32Z"
        updated_at: "2022-04-05T08:57:32Z"

    Vacation-Ressource_Request:
      properties:
        user_id:
          type: string
        yearly_days:
          type: integer
        from:
          type: string
          format: date
          example: "2022-04-06"
        to:
          type: string
          format: date
          example: "2022-04-07"
      example:
        user_id: "1ff63524-156f-466d-b287-4258811444dd"        
        integer: 20
        from: "2022-04-05"
        to: "2022-04-05"

    Vacation-Ressource_Response:
      properties:
        user_id:
          type: string
        yearly_days:
          type: integer
        from:
          type: string
          format: date
        to:
          type: string
          format: date
        created_at:
          type: string 
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        user_id: "1ff63524-156f-466d-b287-4258811444dd"        
        approved_by: "1ff63524-156f-466d-b287-4258811444dd"
        from: "2022-04-06"
        to: "2022-04-07"
        created_at: "2022-04-05T08:57:32Z"
        updated_at: "2022-04-05T08:57:32Z"

paths:
  /user:
    put:
      summary: Create new user 
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User_Request"
      tags: 
        - User
      responses:
        "201":
          description: "user successfully created"
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/User_Response"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "5XX":
          description: "Unexpected error."

    get:
      summary: List all users
      description: ""
      tags:
        - User
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User_Response"
        "401":
          description: "Authorization information is missing or invalid."
        "5XX":
          description: "Unexpected error."


  /user/{user_id}:
    get:
      summary: Gets the user by id
      description: ""
      parameters:
        - in: path
          required: true
          name: user_id
          schema:
            type: integer
      tags: 
        - User
      responses:
        "200":
          description: ""
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/User_Response"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "404":
          description: "A user with the given ID was not found."
        "5XX":
          description: "Unexpected error."


    patch:
      summary: Update the user by id
      description: ""
      parameters:
        - in: path
          required: true
          name: user_id
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User_Request"
      tags: 
        - User
      responses:
        "200":
          description: "user successfully updated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User_Response"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "404":
          description: "A user with the given ID was not found."
        "5XX":
          description: "Unexpected error."

    delete:
      summary: delete the user by id
      description: ""
      parameters:
        - in: path
          required: true
          name: user_id
          schema:
            type: integer
      tags:
        - User
      responses:
        "202":
          description: "user successfully deleted"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "404":
          description: "A user with the given ID was not found."
        "5XX":
          description: "Unexpected error."

  /team:
    put:
      summary: Create new team 
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Team_Request"
      tags: 
        - Team
      responses:
        "201":
          description: "team successfully created"
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/Team_Response"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "5XX":
          description: "Unexpected error."

    get:
      summary: List all teams
      description: ""
      tags:
        - Team
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team_Response"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "5XX":
          description: "Unexpected error."


  /team/{team_id}:
    get:
      summary: Gets the team by id
      description: ""
      parameters:
        - in: path
          required: true
          name: team_id
          schema:
            type: integer
      tags: 
        - Team
      responses:
        "200":
          description: ""
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/Team_Response"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "404":
          description: "A team with the given ID was not found."
        "5XX":
          description: "Unexpected error."

    patch:
      summary: Update the team by id
      description: ""
      parameters:
        - in: path
          required: true
          name: team_id
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Team_Request"
      tags: 
        - Team
      responses:
        "200":
          description: "team successfully updated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team_Response"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "404":
          description: "A team with the given ID was not found."
        "5XX":
          description: "Unexpected error."

    delete:
      summary: delete the team by id
      description: ""
      parameters:
        - in: path
          required: true
          name: team_id
          schema:
            type: integer
      tags:
        - Team
      responses:
        "202":
          description: "team successfully deleted"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "404":
          description: "A team with the given ID was not found."
        "5XX":
          description: "Unexpected error."

  /team/{team_id}/list-users:
    get:
      summary: list all users from one team by team id
      description: ""
      parameters:
        - in: path
          required: true
          name: team_id
          schema:
            type: integer
      tags:
        - Team
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User_Response"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "5XX":
          description: "Unexpected error."

  /user/{user_id}/vacation:    
    get:
      summary: List all vacations
      description: ""
      tags:
        - Vacation
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Vacation_Response"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "404":
          description: "A Vacation with the given ID was not found."
        "5XX":
          description: "Unexpected error."

  /user/{user_id}/vacation/{vacation_id}:
    get:
      summary: Gets the vacation by id
      description: ""
      parameters:
        - in: path
          required: true
          name: vacation_id
          schema:
            type: integer
      tags: 
        - Vacation
      responses:
        "200":
          description: ""
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/Vacation_Response"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "404":
          description: "Requested ressource does not exist."
        "5XX":
          description: "Unexpected error."

    delete:
      summary: delete the vacation by id
      description: ""
      parameters:
        - in: path
          required: true
          name: vacation_id
          schema:
            type: integer
      tags:
        - Vacation
      responses:
        "202":
          description: "vacation successfully deleted"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "404":
          description: "Requested ressource does not exist."
        "5XX":
          description: "Unexpected error."

  /user/{user_id}/vacation/request:
    put:
      summary: Create new vacation-request 
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vacation-Request_Request"
      tags: 
        - Vacation-Request
      responses:
        "200":
          description: "vacation-request successfully created"
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/Vacation-Request_Response"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "404":
          description: "Requested ressource does not exist."
        "5XX":
          description: "Unexpected error."

    get:
      summary: List all vacation-requests
      description: ""
      tags:
        - Vacation-Request
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Vacation-Request_Response"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "404":
          description: "Requested ressource does not exist."
        "5XX":
          description: "Unexpected error."

  /user/{user_id}/vacation/request/{id}:
    get:
      summary: Gets the vacation-request by id
      description: ""
      parameters:
        - in: path
          required: true
          name: vacation_id
          schema:
            type: integer
      tags: 
        - Vacation-Request
      responses:
        "200":
          description: ""
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/Vacation-Request_Response"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "404":
          description: "Requested ressource does not exist."
        "5XX":
          description: "Unexpected error."

    patch:
      summary: Update the vacation-request by id
      description: ""
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vacation-Request_Request"
      tags: 
        - Vacation-Request
      responses:
        "200":
          description: "vacation-request successfully updated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vacation-Request_Response"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "404":
          description: "Requested ressource does not exist."
        "5XX":
          description: "Unexpected error."

    delete:
      summary: delete the vacation-request by id
      description: ""
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: integer
      tags:
        - Vacation-Request
      responses:
        "202":
          description: "vacation-request successfully deleted"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "404":
          description: "Requested ressource does not exist."
        "5XX":
          description: "Unexpected error."

  /user/{user_id}/vacation/ressource:
    put:
      summary: Create new vacation-ressource
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vacation-Ressource_Request"
      tags: 
        - Vacation-Ressource
      responses:
        "201":
          description: "vacation-ressource successfully created"
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/Vacation-Ressource_Response"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "404":
          description: "A user with the given ID was not found."
        "5XX":
          description: "Unexpected error."
    
    get:
      summary: List all vacation-ressources
      description: ""
      tags:
        - Vacation-Ressource
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Vacation-Ressource_Response"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "404":
          description: "A user with the given ID was not found."
        "5XX":
          description: "Unexpected error."

  /user/{user_id}/vacation/ressource/{id}:
    get:
      summary: Gets the vacation-ressource of one user by user id and vacation-ressource id
      description: ""
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: integer
      tags: 
        - Vacation-Ressource
      responses:
        "200":
          description: ""
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/Vacation-Ressource_Response"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "404":
          description: "Requested ressource does not exist."
        "5XX":
          description: "Unexpected error."

    patch:
      summary: Update the vacation-ressource by user id and vacation id
      description: ""
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vacation-Ressource_Request"
      tags: 
        - Vacation-Ressource
      responses:
        "200":
          description: "vacation-ressource successfully updated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vacation-Ressource_Response"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "404":
          description: "Requested ressource does not exist."
        "5XX":
          description: "Unexpected error."

    delete:
      summary: delete the vacation-ressource by user id and vacation id
      description: ""
      parameters:
        - in: path
          required: true
          name: id
          schema:
            type: integer
      tags:
        - Vacation-Ressource
      responses:
        "202":
          description: "vacation-ressource successfully deleted"
        "400":
          description: "Bad request. Could not decode body."
        "401":
          description: "Authorization information is missing or invalid."
        "404":
          description: "Requested ressource does not exist."
        "5XX":
          description: "Unexpected error."
